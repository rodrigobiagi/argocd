parameters:
  - name: namespaceDev
    type: string
  - name: repository
    type: string
  - name: acrName
    type: string
  - name: kubernetesEndpoint
    type: string
  - name: configMapName
    type: string
  - name: renDeployment
    type: string

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'echo "##vso[task.setvariable variable=namespace]${{ parameters.namespaceDev }}"'
    
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Microsoft Azure (ee6fe381-276f-4841-a137-013a36a53279)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      env=$(az acr repository show-tags --name ${{ parameters.acrName }} --repository ${{ parameters.repository }} --top 1 --orderby time_desc)
      env=$(echo $env |  sed "s/\]//g" | sed "s/\[//g" | sed "s/\"//g")
      echo "##vso[task.setvariable variable=imageName]$env"

- task: replacetokens@3
  displayName: "Substituir variaveis deployment e namespace"
  inputs:
    rootDirectory: '$(Build.SourcesDirectory)/infra'
    targetFiles: '*.*'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'
    useLegacyPattern: false
    enableTransforms: false
    enableTelemetry: true
      
- task: replacetokens@3
  displayName: "Substituir variaveis configmap"
  inputs:
    rootDirectory: '$(Build.SourcesDirectory)/infra/configmap'
    targetFiles: '*.*'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'
    useLegacyPattern: false
    enableTransforms: false
    enableTelemetry: true
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: ${{ parameters.kubernetesEndpoint }}
    command: 'apply'
    useConfigurationFile: true
    configuration: '$(Build.SourcesDirectory)/infra/namespace.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
- task: Kubernetes@1
  displayName: 'create configmap'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: ${{ parameters.kubernetesEndpoint }}
    namespace: '$(namespace)'
    command: 
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
    configMapName: ${{ parameters.configMapName }}
    forceUpdateConfigMap: true
    useConfigMapFile: true
    configMapFile: '$(Build.SourcesDirectory)/infra/configmap/appsettings.json'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: | 
      cat $(Build.SourcesDirectory)/infra/deployment.yaml | sed 's/${{ parameters.renDeployment }}: /${{ parameters.renDeployment }}:/' > $(Build.SourcesDirectory)/infra/deploy.yaml
      cat $(Build.SourcesDirectory)/infra/deploy.yaml

- task: Kubernetes@1
  displayName: 'apply deployment'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: ${{ parameters.kubernetesEndpoint }}
    command: 'apply'
    useConfigurationFile: true
    configuration: '$(Build.SourcesDirectory)/infra/deploy.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
